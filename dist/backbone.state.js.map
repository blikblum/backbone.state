{"version":3,"file":"backbone.state.js","sources":["../src/resource.js","../src/storage.js"],"sourcesContent":["import { Model, Collection } from 'backbone'\r\nimport pathToRegexp from 'path-to-regexp'\r\n\r\nfunction getResourcePath (resourceDef, params = {}, resourceId) {\r\n  const toPath = pathToRegexp.compile(resourceDef.path)\r\n  let query = ''\r\n  let result = toPath(params)\r\n  if (resourceDef.params) {\r\n    resourceDef.params.forEach(paramDef => {\r\n      const paramValue = params[paramDef.name]\r\n      const isQuery = paramDef.location === 'query'\r\n      const isRequired = (typeof paramDef.required === 'undefined' && !isQuery) || paramDef.required === true\r\n      if (isRequired && paramValue == null) {\r\n        throw new Error(`Param ${paramDef.name} is not defined for resource ${resourceDef.name}`)\r\n      }\r\n      if (isQuery && paramValue != null) {\r\n        query += `${query ? '&' : ''}${encodeURIComponent(paramDef.name)}=${encodeURIComponent(paramValue)}`\r\n      }\r\n    })\r\n  }\r\n  if (resourceId) {\r\n    result = result.replace(/[^/]$/, '$&/') + encodeURIComponent(resourceId)\r\n  }\r\n  if (query) {\r\n    result += `?${query}`\r\n  }\r\n  return result\r\n}\r\n\r\nfunction findResourceDef (client, resource) {\r\n  const result = client.resourceDefs.find(def => def.name === resource)\r\n  if (!result) {\r\n    throw new Error(`Unable to find resource definition for ${resource}`)\r\n  }\r\n  return result\r\n}\r\n\r\nexport function createResourceSync (originalSync) {\r\n  return function resourceSync (method, model, options) {\r\n    if (model.resource) {\r\n      let resourceId\r\n      const client = model.resourceClient || (model.collection && model.collection.resourceClient)\r\n      if (!client) {\r\n        throw new Error(`resourceClient not defined for ${model.cid}`)\r\n      }\r\n      const resourceDef = findResourceDef(client, model.resource)\r\n      if (model instanceof Model) {\r\n        const idAttribute = 'idAttribute' in resourceDef ? resourceDef.idAttribute : model.idAttribute\r\n        if (idAttribute) {\r\n          resourceId = model.get(idAttribute)\r\n        } else if (method === 'create') {\r\n          method = 'update'\r\n        }\r\n      }\r\n      options = options ? Object.assign({}, options) : {}\r\n      options.url = client.baseUrl + getResourcePath(resourceDef, model.params, resourceId)\r\n    }\r\n    return originalSync(method, model, options)\r\n  }\r\n}\r\n\r\nexport const paramsMixin = {\r\n  clearParams () {\r\n    this.params && (this.params = {})\r\n  },\r\n\r\n  setParam (name, value) {\r\n    this.params || (this.params = {})\r\n    this.params[name] = value\r\n  }\r\n}\r\n\r\nexport const ResourceModel = Model.extend(paramsMixin)\r\n\r\nexport const ResourceCollection = Collection.extend(paramsMixin)\r\n","import Backbone from 'backbone'\r\n\r\n/**\r\n * A container for all the models of a particular type. Manages requests to your\r\n * server.\r\n *\r\n * @example\r\n * var BookStorage = Storage.extend({\r\n *   model: Book,\r\n *   collection: Books\r\n * });\r\n * var bookStorage = new BookStorage();\r\n *\r\n * bookStorage.find(1).then(function(model) {\r\n *   model.doSomething();\r\n * });\r\n *\r\n * bookStorage.findAll().then(function(collection) {\r\n *   collection.doSomething();\r\n * });\r\n *\r\n * var book = new Book({ title: 'Lord of the Flies' });\r\n *\r\n * bookStorage.save(book).then(function() {\r\n *   book.isNew(); // false\r\n * });\r\n *\r\n * @public\r\n * @class Storage\r\n */\r\nclass Storage {\r\n\r\n  /**\r\n   * The model class to store.\r\n   * @type {Backbone.Model}\r\n   */\r\n  static model = Backbone.Model\r\n\r\n  /**\r\n   * The collection class to store.\r\n   * @type {Backbone.Collection}\r\n   */\r\n  static collection = Backbone.Collection\r\n\r\n  /**\r\n   * @public\r\n   * @constructs Storage\r\n   */\r\n  constructor () {\r\n    this.records = new this.constructor.collection()\r\n    this.listenToOnce(this.records, 'sync', () => {\r\n      this._hasSynced = true\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Find a specific model from the store or fetch it from the server and insert\r\n   * it into the store.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method find\r\n   * @memberOf Storage\r\n   * @param {Number|String|Object|Backbone.Model} model - The model to find.\r\n   * @param {Boolean} forceFetch - Force fetch model from server.\r\n   * @returns {Promise} - A promise that will resolve to the model.\r\n   */\r\n  find (model, forceFetch = false) {\r\n    let record = this.records.get(model)\r\n\r\n    if (record && !forceFetch) {\r\n      return Promise.resolve(record)\r\n    } else {\r\n      model = this._ensureModel(model)\r\n      return Promise.resolve(model.fetch()).then(() => {\r\n        return this.insert(model)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find all the models in the store or fetch them from the server if they\r\n   * haven't been fetched before.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method findAll\r\n   * @memberOf Storage\r\n   * @param {Object} options - Options to pass to collection fetch. Also allows\r\n   * setting parameters on collection.\r\n   * @param {Boolean} forceFetch - Force fetch model from server.\r\n   * @returns {Promise} - A promise that will resolve to the entire collection.\r\n   */\r\n  findAll (options = {}, forceFetch = false) {\r\n    if (this._hasSynced && !forceFetch) {\r\n      return Promise.resolve(this.records)\r\n    } else {\r\n      return Promise.resolve(this.records.fetch(options)).then(() => {\r\n        return this.records\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save a model to the server.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method save\r\n   * @memberOf Storage\r\n   * @param {Number|String|Object|Backbone.Model} model - The model to save\r\n   * @returns {Promise} - A promise that will resolve to the saved model.\r\n   */\r\n  save (model) {\r\n    let record = this.records.get(model)\r\n    model = record || this._ensureModel(model)\r\n    return Promise.resolve(model.save()).then(() => {\r\n      if (!record) {\r\n        this.insert(model)\r\n      }\r\n      return model\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Insert a model into the store.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method insert\r\n   * @memberOf Storage\r\n   * @params {Object|Backbone.Model} - The model to add.\r\n   * @returns {Promise} - A promise that will resolve to the added model.\r\n   */\r\n  insert (model) {\r\n    model = this.records.add(model, { merge: true })\r\n    return Promise.resolve(model)\r\n  }\r\n\r\n  /**\r\n   * Ensure that we have a real model from an id, object, or model.\r\n   *\r\n   * @private\r\n   * @instance\r\n   * @method _ensureModel\r\n   * @memberOf Storage\r\n   * @params {Number|String|Object|Backbone.Model} - An id, object, or model.\r\n   * @returns {Backbone.Model} - The model.\r\n   */\r\n  _ensureModel (model) {\r\n    const ModelClass = this.constructor.model\r\n    if (model instanceof ModelClass) {\r\n      return model\r\n    } else if (typeof model === 'object') {\r\n      return new ModelClass(model)\r\n    } else {\r\n      return new ModelClass({ id: model })\r\n    }\r\n  }\r\n}\r\n\r\nObject.assign(Storage.prototype, Backbone.Events)\r\n\r\nexport default Storage\r\n"],"names":["getResourcePath","resourceDef","params","resourceId","toPath","pathToRegexp","compile","path","query","result","forEach","paramValue","paramDef","name","isQuery","location","isRequired","required","Error","encodeURIComponent","replace","findResourceDef","client","resource","resourceDefs","find","def","createResourceSync","originalSync","resourceSync","method","model","options","resourceClient","collection","cid","Model","idAttribute","get","Object","assign","url","baseUrl","paramsMixin","clearParams","setParam","value","ResourceModel","extend","ResourceCollection","Collection","Storage","records","constructor","listenToOnce","_hasSynced","forceFetch","record","Promise","resolve","_ensureModel","fetch","then","insert","findAll","save","add","merge","ModelClass","id","Backbone","prototype","Events"],"mappings":"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"}